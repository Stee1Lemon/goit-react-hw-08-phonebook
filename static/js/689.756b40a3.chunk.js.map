{"version":3,"file":"static/js/689.756b40a3.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/PhoneBook/PhoneBook.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","redux/filter/filter-selectors.js","components/ContactList/ContactList.jsx","components/PhoneBook/PhoneBook.jsx","pages/PhoneBookPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\n","import styled from 'styled-components';\n\nexport const PhoneBook = styled('div')(() => {\n  return {\n    margin: '30px auto',\n    width: 500,\n    '& form': {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      gap: 10,\n      margin: '15px 0',\n      padding: 10,\n      border: '1px solid black',\n    },\n    '& h2': { marginBottom: 15 },\n    '& ul': {\n      marginTop: 15,\n      paddingLeft: 30,\n    },\n    '& li': {\n      margin: '8px 0',\n    },\n    '& li p': {\n      display: 'inline-block',\n      marginRight: 10,\n    },\n\n    '& button': {\n      display: 'inline-block',\n      outline: 0,\n      appearance: 'none',\n      padding: '0px 12px',\n      borderRadius: '4px',\n      textDecoration: 'none',\n      cursor: 'pointer',\n      backgroundColor: 'rgb(249, 251, 250)',\n      border: '1px solid rgb(137, 151, 155)',\n      boxShadow: 'rgb(6 22 33 / 30%) 0px 1px 2px',\n      color: 'rgb(61, 79, 88)',\n      fontSize: '14px',\n      fontWeight: 400,\n      height: '36px',\n      transition: 'all 150ms ease-in-out 0s',\n      '&:hover': {\n        color: 'rgb(61, 79, 88)',\n        backgroundColor: 'rgb(255, 255, 255)',\n        border: '1px solid rgb(93, 108, 116)',\n        boxShadow:\n          'rgb(0 0 0 / 30%) 0px 4px 4px, rgb(231 238 236) 0px 0px 0px 3px',\n      },\n    },\n    '& li button': {\n      height: 18,\n      fontSize: '12px',\n    },\n  };\n});\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport contactsOperations from 'redux/contacts/contacts-operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    dispatch(contactsOperations.createContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <p>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          value={name}\n        />\n      </label>\n      <label>\n        <p>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={e => {\n            setNumber(e.target.value);\n          }}\n          value={number}\n        />\n      </label>\n      <button type={'submit'}>Add contact</button>\n    </form>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { handleFilterRedux } from 'redux/filter/filter-slice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    dispatch(handleFilterRedux(e.target.value));\n  };\n\n  return (\n    <label>\n      <p>Find contacts by name</p>\n      <input type=\"text\" name=\"filter\" onChange={handleFilter} />\n    </label>\n  );\n};\n","export const selectFilter = state => state.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { useEffect } from 'react';\nimport { fetchContactsThunk } from 'redux/thunk';\nimport { fetchDeleteContact } from 'api/api';\nimport { selectFilter } from 'redux/filter/filter-selectors';\nimport contactsOperations from 'redux/contacts/contacts-operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  const deleteContact = async id => {\n    await fetchDeleteContact(id);\n    dispatch(fetchContactsThunk());\n  };\n\n  const doFilteredContacts = () => {\n    return contacts.filter(el =>\n      el.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const filteredContacts = doFilteredContacts();\n\n  if (!filteredContacts?.length) return null;\n\n  return (\n    <>\n      <ul>\n        {filteredContacts.map(({ name, id, number }) => {\n          return (\n            <li key={id}>\n              <p>\n                {name}: {number}\n              </p>\n              <button onClick={() => deleteContact(id)}>Delete</button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contacts-selectors';\nimport { PhoneBook } from './PhoneBook.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport contactsOperations from 'redux/contacts/contacts-operations';\n\nexport const PhoneBookComponent = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const handleContacts = () => {\n    dispatch(contactsOperations.getContacts());\n  };\n\n  return (\n    <PhoneBook>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <button onClick={handleContacts}>Handle Contacts</button>\n      {isLoading && <h3>Loading...</h3>}\n      {error && <h3>Request failed</h3>}\n      <ContactList />\n    </PhoneBook>\n  );\n};\n","import { PhoneBookComponent } from 'components/PhoneBook/PhoneBook';\n\nconst PhoneBookPage = () => {\n  return <PhoneBookComponent />;\n};\n\nexport default PhoneBookPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","PhoneBook","styled","margin","width","display","flexDirection","alignItems","gap","padding","border","marginBottom","marginTop","paddingLeft","marginRight","outline","appearance","borderRadius","textDecoration","cursor","backgroundColor","boxShadow","color","fontSize","fontWeight","height","transition","ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","e","_context","prev","next","preventDefault","contactsOperations","stop","_x","apply","arguments","_jsxs","onSubmit","children","_jsx","type","pattern","title","required","onChange","target","value","Filter","handleFilterRedux","selectFilter","filter","ContactList","useSelector","useEffect","deleteContact","id","fetchDeleteContact","fetchContactsThunk","filteredContacts","el","toLowerCase","includes","length","_Fragment","map","_ref2","onClick","PhoneBookComponent"],"sourceRoot":""}